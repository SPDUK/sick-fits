# client facing types, queries, mutations, anything visible by API goes in schema
# ! means we can't return null for any item (required)
# [Something!]! means an array is required and it must have at least one Something inside it

# if something should be the same in schema.graphql as what you have in prisma.graphql you can import it, here we use import to import the Item type

# import * from './generated/prisma.graphql'
type SuccessMessage {
  message: String
}

type Mutation {
  createItem(
    title: String
    description: String
    price: Int
    image: String
    largeImage: String
  ): Item!

  updateItem(id: ID!, title: String, description: String, price: Int): Item!

  deleteItem(id: ID!): Item

  signUp(email: String!, password: String!, name: String!): User!
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
}
type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  item(where: ItemWhereUniqueInput): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  users: [User]!
}
# don't potentially expose user passwords or reset token info
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}
